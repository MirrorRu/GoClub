syntax = "proto3";

package goclub.engine.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
//import "google/protobuf/timestamp.proto";
import "common.proto";

option go_package = "goclub/engine/v1;api";


service Members {
        rpc MemberCreate(MemberCreateRequest) returns (MemberCreateResponse)  {
            option (google.api.http) = {
                post: "/api/v1/members"
                body: "*"
            };
        }
    
        rpc MemberUpdate(MemberUpdateRequest) returns (MemberUpdateResponse) {
            option (google.api.http) = {
                put: "/api/v1/members/{object.id}"
                body: "*"
            };
        }
    
        rpc MemberDelete(MemberDeleteRequest) returns (MemberDeleteResponse)  {
            option (google.api.http) = {
                delete: "/api/v1/members/{id}"
            };
        }
    
        rpc MemberRead(MemberReadRequest) returns (MemberReadResponse)  {
            option (google.api.http) = {
                get: "/api/v1/members/{id}"
            };
        }
        rpc   MemberListing(  MemberListingRequest) returns (  MemberListingResponse)  {
            option (google.api.http) = {
                get: "/api/v1/members"
            };
        }
    }
    
   
    message MemberInfo {
        int64 id = 1;
        string full_name = 2 [(validate.rules).string.min_len = 2, (validate.rules).string.max_len = 100];
        Date birthday = 3; 
        string notes = 4 [(validate.rules).string.max_len = 10000];
    }
    
    // Creating
    message MemberCreateRequest {
        MemberInfo object = 1;
    }
    
    message MemberCreateResponse {
        CRUDResult crud_result = 1;
        MemberInfo object = 2;
    }
    
    // Updating
    message MemberUpdateRequest {
        MemberInfo object = 1;
    }
    
    message MemberUpdateResponse   {
        CRUDResult crud_result = 1;
        MemberInfo object = 2;
    }
    
    // Deleting
    message MemberDeleteRequest {
        int64 id = 1;
    }
    
    message MemberDeleteResponse {
        CRUDResult crud_result = 1;
    }
    
    message MemberReadRequest {
        int64 id = 1;
    }
    
    message MemberReadResponse {
        CRUDResult crud_result = 1;
        MemberInfo object = 2;
    }
    
    message  MemberListingRequest {
    }
    
    message  MemberListingResponse  {
        CRUDResult crud_result = 1;
        repeated MemberInfo objects = 2;
    }
    
    