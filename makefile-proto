GEARS_API_PROTO_DST:=gears/pkg/api/v1
GEARS_API_PROTO_SRC:=gears/api/v1

# Добавляем *.EXE для запуска под Windows
EXESUFFIX :=
ifeq ($(OS),Windows_NT)
	EXESUFFIX :=.exe
endif

.PHONY: genproto
genproto: .proto-generate
	go mod tidy

.PHONY: .proto-generate
.proto-generate: .gears-api-generate .merge-swagger

.PHONY: setup-proto
setup-proto: vendor-rm  \
	vendor-proto/google/protobuf \
	vendor-proto/validate \
	vendor-proto/google/api \
	vendor-proto/protoc-gen-openapiv2/options
	go mod tidy

.PHONY: vendor-rm
vendor-rm:
	rm -rf vendor-proto


# Устанавливаем proto описания google/protobuf
.PHONY: vendor-proto/google/protobuf
vendor-proto/google/protobuf:
	git clone -b main --single-branch -n --depth=1 --filter=tree:0 \
		https://github.com/protocolbuffers/protobuf vendor-proto/protobuf &&\
	cd vendor-proto/protobuf &&\
	git sparse-checkout set --no-cone src/google/protobuf &&\
	git checkout
	mkdir -p vendor-proto/google
	mv vendor-proto/protobuf/src/google/protobuf vendor-proto/google
	rm -rf vendor-proto/protobuf

# Устанавливаем proto описания validate
.PHONY: vendor-proto/validate
vendor-proto/validate:
	git clone -b main --single-branch --depth=2 --filter=tree:0 \
		https://github.com/bufbuild/protoc-gen-validate vendor-proto/tmp && \
		cd vendor-proto/tmp && \
		git sparse-checkout set --no-cone validate &&\
		git checkout
		mkdir -p vendor-proto/validate
		mv vendor-proto/tmp/validate vendor-proto/
		rm -rf vendor-proto/tmp

# Устанавливаем proto описания google/googleapis
.PHONY: vendor-proto/google/api
vendor-proto/google/api:
	git clone -b master --single-branch -n --depth=1 --filter=tree:0 \
 		https://github.com/googleapis/googleapis vendor-proto/googleapis && \
 	cd vendor-proto/googleapis && \
	git sparse-checkout set --no-cone google/api && \
	git checkout
	mkdir -p  vendor-proto/google
	mv vendor-proto/googleapis/google/api vendor-proto/google
	rm -rf vendor-proto/googleapis

# Устанавливаем proto описания protoc-gen-openapiv2/options
.PHONY: vendor-proto/protoc-gen-openapiv2/options
vendor-proto/protoc-gen-openapiv2/options:
	git clone -b main --single-branch -n --depth=1 --filter=tree:0 \
 		https://github.com/grpc-ecosystem/grpc-gateway vendor-proto/grpc-ecosystem && \
 	cd vendor-proto/grpc-ecosystem && \
	git sparse-checkout set --no-cone protoc-gen-openapiv2/options && \
	git checkout
	mkdir -p vendor-proto/protoc-gen-openapiv2
	mv vendor-proto/grpc-ecosystem/protoc-gen-openapiv2/options vendor-proto/protoc-gen-openapiv2
	rm -rf vendor-proto/grpc-ecosystem

PHONY: .gears-api-generate
.gears-api-generate: 
	rm -rf ${GEARS_API_PROTO_DST}
	mkdir -p ${GEARS_API_PROTO_DST}
	protoc \
	-I ${GEARS_API_PROTO_SRC} \
	-I vendor-proto \
	--plugin=protoc-gen-go=$(LOCAL_BIN)/protoc-gen-go$(EXESUFFIX) \
	--go_out ${GEARS_API_PROTO_DST} \
	--go_opt paths=source_relative \
	--plugin=protoc-gen-go-grpc=$(LOCAL_BIN)/protoc-gen-go-grpc$(EXESUFFIX) \
	--go-grpc_out ${GEARS_API_PROTO_DST} \
	--go-grpc_opt paths=source_relative \
	--plugin=protoc-gen-validate=$(LOCAL_BIN)/protoc-gen-validate$(EXESUFFIX) \
	--validate_out="lang=go,paths=source_relative:${GEARS_API_PROTO_DST}" \
	--plugin=protoc-gen-grpc-gateway=$(LOCAL_BIN)/protoc-gen-grpc-gateway$(EXESUFFIX) \
	--grpc-gateway_out ${GEARS_API_PROTO_DST} \
	--grpc-gateway_opt logtostderr=true --grpc-gateway_opt paths=source_relative --grpc-gateway_opt generate_unbound_methods=true \
	--plugin=protoc-gen-openapiv2=$(LOCAL_BIN)/protoc-gen-openapiv2$(EXESUFFIX) \
	--openapiv2_out ${GEARS_API_PROTO_DST} \
	--openapiv2_opt logtostderr=true \
	${GEARS_API_PROTO_SRC}/*.proto


PHONY: .merge-swagger
.merge-swagger: 
	rm -rf pkg/swagger
	mkdir -p pkg/swagger
	$(LOCAL_BIN)/go-swagger-merger$(EXESUFFIX) \
	-o pkg/swagger/swagger.json \
	${GEARS_API_PROTO_DST}/club.swagger.json
#	\ pkg/${STOCK_API_PROTO_PATH}/stock.swagger.json
